name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  CTEST_OUTPUT_ON_FAILURE: 1
  BUILD_TYPE: RelWithDebInfo
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
  VCPKG_DEFAULT_TRIPLET: x64-windows
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  VCPKG_USE_NUGET_CACHE: true

jobs:  
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['windows-2019']
        include:
          - os: windows-2019
            arch: x64
    env:
      buildDir: '${{ github.workspace }}/build'
    steps:
    - uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - uses: actions/checkout@v2

    - name: Install vcpkg
      shell: 'bash'
      run: |
        rm -rf "$VCPKG_INSTALLATION_ROOT"
        git clone --depth 1 https://github.com/microsoft/vcpkg.git "$VCPKG_INSTALLATION_ROOT"
        "$VCPKG_INSTALLATION_ROOT"/bootstrap-vcpkg.bat
    
    - name: Install MSVC problem matcher
      uses: ammaraskar/msvc-problem-matcher@master

    - name: Configure developer command prompt for ${{ matrix.arch }}
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}

    - name: 'Setup NuGet Credentials'
      shell: 'bash'
      run: >
        `"$VCPKG_INSTALLATION_ROOT"/vcpkg fetch nuget | tail -n 1`
        sources add
        -source "https://nuget.pkg.github.com/Faaux/index.json"
        -storepasswordincleartext
        -name "GitHub"
        -username "Faaux"
        -password "${{ secrets.GITHUB_TOKEN }}"
    
    - name: 'Run CMake with Ninja, install dependencies with vcpkg, build with CMake'
      shell: 'bash'
      run: |
        mkdir build
        cd build

        echo "::group::CMake"
        cmake .. \
          -GNinja \
          -DVCPKG_TARGET_TRIPLET=${{ matrix.arch }}-windows-custom \
          -DVCPKG_OVERLAY_TRIPLETS=../triplets \
          -DCMAKE_TOOLCHAIN_FILE="$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"
        echo "::endgroup::"

        echo "::group::Build"
        cmake --build .
        echo "::endgroup::"

    - name: Test
      shell: bash
      run: |
        cd ${GITHUB_WORKSPACE}/build
        ctest --timeout 120
